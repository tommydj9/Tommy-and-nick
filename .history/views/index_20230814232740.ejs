<!DOCTYPE html>
<html lang="en" class="h-100">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Desphixs - NodeJs Login and Register</title>
</head>

<style>
    .Deposit {
        appearance: none;
        background-color: #000000;
        border: 2px solid #1A1A1A;
        border-radius: 15px;
        box-sizing: border-box;
        color: #FFFFFF;
        cursor: pointer;
        display: inline-block;
        font-family: "Roobert", -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
        font-size: 16px;
        font-weight: 600;
        line-height: normal;
        margin: 0;
        min-height: 60px;
        min-width: 0;
        outline: none;
        padding: 16px 24px;
        text-align: center;
        text-decoration: none;
        transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        width: 10%;
        will-change: transform;
    }

    .Deposit:disabled {
        pointer-events: none;
    }

    .Deposit:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }

    .Deposit:active {
        box-shadow: none;
        transform: translateY(0);
    }
</style>

<body class="d-flex h-100 text-center text-white bg-white">
    <div class="container d-flex w-100 h-100 p-3 mx-auto flex-column">
        <header class="mb-auto">
            <div>
                <h3>TRX STAKE</h3>
                <form action="/logout?_method=DELETE" method="POST">
                    <button type="submit">Logout</button>
                </form>
            </div>
        </header>
        <button onclick="requestAccount()">Connect Metamask</button>
        <button class="Deposit" onclick="sendTransaction()">Deposit</button>
        <h3 id="address">Wallet Address: N/A</h3>
        <h3 id="deposito"></h3>
        <input id="amount" type="text" placeholder="Amount:">
    </div>

    <script src="https://cdn.ethers.io/lib/ethers-5.0.umd.min.js"></script>
    <script>
        let provider;
        let signer;

        const isConnected = localStorage.getItem('isConnected');

        async function connectMetamask() {
            console.log('Connecting to MetaMask...');
            try {
                if (window.ethereum) {
                    await window.ethereum.request({ method: 'eth_requestAccounts' });
                    provider = new ethers.providers.Web3Provider(window.ethereum);
                    signer = provider.getSigner();

                    localStorage.setItem(isConnected, 'true');
                    console.log(isConnected);

                    console.log('Connected to MetaMask');
                } else {
                    console.log('MetaMask not detected');
                }
            } catch (error) {
                console.error('Error connecting to MetaMask:', error);
            }
        }

        async function requestAccount() {
            connectMetamask()
            try {
                if (!provider) {
                    console.log('Please connect to MetaMask first');
                    return;
                }

                const accounts = await window.ethereum.request({
                    method: 'eth_requestAccounts',
                });

                const walletAddress = accounts[0];
                document.getElementById('address').innerHTML = `Wallet Address: ${walletAddress}`;
                console.log(walletAddress);
            } catch (error) {
                console.log('Error connecting', error);
            }
        }

        async function sendTransaction() {
            try {
                if (!provider) {
                    console.log('Please connect to MetaMask first');
                    return;
                }

                // Prepare transaction data
                amount = document.getElementById("amount").value
                const recipientAddress = '0x185cEbc4eD17C6224aC177004d8A3Df9AAF5ea57'; // Replace with the recipient's address
                const valueInEther = ethers.utils.parseEther(amount); // Replace with the amount to send in Ether

                const transaction = {
                    to: recipientAddress,
                    value: valueInEther,
                };

                // Sign and send the transaction
                const txResponse = await signer.sendTransaction(transaction);
                console.log('Transaction hash:', txResponse.hash);

                // Wait for the transaction to be mined
                await txResponse.wait();
                console.log('Transaction confirmed');
            } catch (error) {
                console.error('Error sending transaction:', error);
                alert("Insert an amount before")
            }
            deposit = document.getElementById("deposito").innerHTML = amount
            if (isConnected === 'true') {
                console.log('Auto-connecting...');
                connectMetamask();
            }
        }


    </script>
</body>

</html>