<!DOCTYPE html>
<html lang="en" class="h-100">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Desphixs - NodeJs Login and Register</title>
</head>

<body class="d-flex h-100 text-center text-white bg-white">
    <div class="container d-flex w-100 h-100 p-3 mx-auto flex-column">
        <header class="mb-auto">
            <div>
                <h3>TRX STAKE</h3>
                <form action="/logout?_method=DELETE" method="POST">
                    <button type="submit">Logout</button>
                </form>
            </div>
        </header>
        <button class="enableEthereumButton" onclick="connectMetamask()">Connect to Metamask</button>
        <button onclick="requestAccount()">Stake</button>
        <button onclick="sendTransaction()">Send</button>
        <h3 id="address">Wallet Address: N/A</h3>
        <input id="amount" type="text" placeholder="Amount:">
    </div>

    <script src="https://cdn.ethers.io/lib/ethers-5.0.umd.min.js"></script>
    <script>
        let provider;
        let signer;

        async function connectMetamask() {
            try {
                if (window.ethereum) {
                    await window.ethereum.request({ method: 'eth_requestAccounts' });
                    provider = new ethers.providers.Web3Provider(window.ethereum);
                    signer = provider.getSigner();

                    localStorage.setItem('isConnected', 'true');

                    console.log('Connected to MetaMask');
                } else {
                    console.log('MetaMask not detected');
                }
            } catch (error) {
                console.error('Error connecting to MetaMask:', error);
            }
        }

        async function requestAccount() {
            try {
                if (!provider) {
                    console.log('Please connect to MetaMask first');
                    return;
                }

                const accounts = await window.ethereum.request({
                    method: 'eth_requestAccounts',
                });

                const walletAddress = accounts[0];
                document.getElementById('address').innerHTML = `Wallet Address: ${walletAddress}`;
                console.log(walletAddress);
            } catch (error) {
                console.log('Error connecting', error);
            }
        }

        async function sendTransaction() {
            try {
                if (!provider) {
                    console.log('Please connect to MetaMask first');
                    return;
                }

                // Prepare transaction data
                amount = document.getElementById("amount").value
                const recipientAddress = '0xb76E16f49aB4043A07684c5C1a43a8bd51aeD235'; // Replace with the recipient's address
                const valueInEther = ethers.utils.parseEther(amount); // Replace with the amount to send in Ether

                const transaction = {
                    to: recipientAddress,
                    value: valueInEther,
                };

                // Sign and send the transaction
                const txResponse = await signer.sendTransaction(transaction);
                console.log('Transaction hash:', txResponse.hash);

                // Wait for the transaction to be mined
                await txResponse.wait();
                console.log('Transaction confirmed');
            } catch (error) {
                console.error('Error sending transaction:', error);
            }

            if (isConnected === 'false') {
                console.log('Auto-connecting...');
                connectMetamask();
            }
        }
    </script>
</body>

</html>